MemoryOpen ( $aPID ) Description( Internal use only. )
MemoryClose (  ) Description( Internal use only. )
WriteBinary ( $aBinaryString, $aAddress ) Description( Internal use only. )
MemoryWrite ( $aAddress, $aData, $aType = 'dword' ) Description( Internal use only. )
MemoryRead ( $aAddress, $aType = 'dword' ) Description( Internal use only. )
MemoryReadPtr ( $aAddress, $aOffset, $aType = 'dword' ) Description( Internal use only. )
SwapEndian ( $aHex ) Description( Internal use only. )
GetLoggedCharNames (  ) Description( Returns a list of logged characters )
ScanGW (  ) Description( Returns an array of logged characters of gw windows (at pos 0 there is the size of the array) )
__ProcessGetName ( $i_PID ); Return values .( Success - The name of the process ; Failure - Blank string and sets @error ; 1 - Process doesn't exist ; 2 - Error getting process list ; 3 - No processes found ; Author ........: Erifash <erifash [at] gmail [dot] com>, Wouter van Kesteren. ; Remarks .......: Supplementary to ProcessExists(). ; =============================================================================================================================== )
Initialize ( $aGW, $bChangeTitle = True, $aUseStringLog = True, $aUseEventSystem = True ) Description( Injects GWA2 into the game client. )
GetValue ( $aKey ) Description( Internal use only. )
SetValue ( $aKey, $aValue ) Description( Internal use only. )
Scan (  ) Description( Internal use only. )
AddPattern ( $aPattern ) Description( Internal use only. )
GetScannedAddress ( $aLabel, $aOffset ) Description( Internal use only. )
ScanForCharname (  ) Description( Internal use only. )
StartSalvage ( $aItem ) Description( Starts a salvaging session of an item. )
SalvageMaterials (  ) Description( Salvage the materials out of an item. )
SalvageMod ( $aModIndex ) Description( Salvages a mod out of an item. )
IdentifyItem ( $aItem ) Description( Identifies an item. )
IdentifyBag ( $aBag, $aWhites = False, $aGolds = True ) Description( Identifies all items in a bag. )
EquipItem ( $aItem ) Description( Equips an item. )
UseItem ( $aItem ) Description( Uses an item. )
useitembyslot ( $abag, $aslot ) )
PickUpItem ( $aItem ) Description( Picks up an item. )
DropItem ( $aItem, $aAmount = 0 ) Description( Drops an item. )
MoveItem ( $aItem, $aBag, $aSlot ) Description( Moves an item. )
DestroyItem ( $aItem ) )
AcceptAllItems (  ) Description( Accepts unclaimed items after a mission. )
SellItem ( $aItem, $aQuantity = 0 ) Description( Sells an item. )
BuyItem ( $aItem, $aQuantity, $aValue ) Description( Buys an item. )
BuyIDKit (  ) Description( Buys an ID kit. )
BuySuperiorIDKit (  ) Description( Buys a superior ID kit. )
TraderRequest ( $aModelID, $aExtraID = -1 ) Description( Request a quote to buy an item from a trader. Returns true if successful. )
TraderBuy (  ) Description( Buy the requested item. )
TraderRequestSell ( $aItem ) Description( Request a quote to sell an item to the trader. )
TraderSell (  ) Description( ID of the item item being sold. )
CollectItem ( $nSrcModelId, $nCostCount, $nDstModelId ) )
GetMerchantItemPtrByModelId ( $nModelId ) )
GetInventoryItemPtrByModelId ( $nModelId ) )
MergeStackLeftOver ( $ITEM_MODEL_ID, $Ratio ) )
GetItemByModelIDExtended ( $ModelID, $Ratio = 1, $StartBag = 1, $StartSlot = 1, $fetchMergeCandidate = false ) )
GetItemInscr ( $aItem ); Returns Inscription and all modvalues of the Inscription ;	return( array(modvalcount, inscr, modval1, [modval2, modval3 ...]) ;	no inscription: return 0 )
GetItemMaxDmg ( $aItem ) )
GetItemMod1 ( $aItem ); Returns first Mod and all of its modvalues ;	return( array(modvalcount, mod, modval1, [modval2, modval3 ...]) ;	no mod: return 0 )
GetItemMod2 ( $aItem ); Returns second Mod and all of its modvalues ;	return( array(modvalcount, mod, modval1, [modval2, modval3 ...]) ;	no 2nd mod: return 0 )
GetIsShield ( $aItem ) )
DropGold ( $aAmount = 0 ) Description( Drop gold on the ground. )
DepositGold ( $aAmount = 0 ) Description( Deposit gold into storage. )
WithdrawGold ( $aAmount = 0 ) Description( Withdraw gold from storage. )
ChangeGold ( $aCharacter, $aStorage ) Description( Internal use for moving gold. )
AddHero ( $aHeroId ) Description( Adds a hero to the party. )
KickHero ( $aHeroId ) Description( Kicks a hero from the party. )
KickAllHeroes (  ) Description( Kicks all heroes from the party. )
AddNpc ( $aNpcId ) Description( Add a henchman to the party. )
KickNpc ( $aNpcId ) Description( Kick a henchman from the party. )
CancelHero ( $aHeroNumber ) Description( Clear the position flag from a hero. )
CancelAll (  ) Description( Clear the position flag from all heroes. )
CommandHero ( $aHeroNumber, $aX, $aY ) Description( Place a hero's position flag. )
CommandAll ( $aX, $aY ) Description( Place the full-party position flag. )
LockHeroTarget ( $aHeroNumber, $aAgentID = 0 ) ;$aAgentID=0 Cancels Lock Description( Lock a hero onto a target. )
SetHeroAggression ( $aHeroNumber, $aAggression ) ;0=Fight, 1=Guard, 2=Avoid Description( Change a hero's aggression level. )
DisableHeroSkillSlot ( $aHeroNumber, $aSkillSlot ) Description( Disable a skill on a hero's skill bar. )
EnableHeroSkillSlot ( $aHeroNumber, $aSkillSlot ) Description( Enable a skill on a hero's skill bar. )
ChangeHeroSkillSlotState ( $aHeroNumber, $aSkillSlot ) Description( Internal use for enabling or disabling hero skills )
UseHeroSkill ( $aHero, $aSkillSlot, $aTarget = 0 ) Description( Order a hero to use a skill. )
SetDisplayedTitle ( $aTitle = 0 );无 = 0x00, 日戟 = 0x11, 光明 = 0x14, 阿苏拉 = 0x26, 矮人 = 0x27, 黑檀 = 0x28, 诺恩 = 0x29 )
Move ( $aX, $aY, $aRandom = 50 ) Description( Move to a location. )
MoveTo ( $aX, $aY, $aRandom = 50 ) Description( Move to a location and wait until you reach it. )
GoPlayer ( $aAgent ) Description( Run to or follow a player. )
GoNPC ( $aAgent ) Description( Talk to an NPC )
GoToNPC ( $aAgent ) Description( Talks to NPC and waits until you reach them. )
GoSignpost ( $aAgent ) Description( Run to a signpost. )
GoToSignpost ( $aAgent ) Description( Go to signpost and waits until you reach it. )
Attack ( $aAgent, $aCallTarget = False ) Description( Attack an agent. )
TurnLeft ( $aTurn ) Description( Turn character to the left. )
TurnRight ( $aTurn ) Description( Turn character to the right. )
MoveBackward ( $aMove ) Description( Move backwards. )
MoveForward ( $aMove ) Description( Run forwards. )
StrafeLeft ( $aStrafe ) Description( Strafe to the left. )
StrafeRight ( $aStrafe ) Description( Strafe to the right. )
ToggleAutoRun (  ) Description( Auto-run. )
ReverseDirection (  ) Description( Turn around. )
TravelTo ( $aMapID, $aDis = 0 ) Description( Map travel to an outpost. )
ZoneMap ( $aMapID, $aDistrict = 0 ) Description( Internal use for map travel. )
MoveMap ( $aMapID, $aRegion, $aDistrict, $aLanguage ) Description( Internal use for map travel. )
ReturnToOutpost (  ) Description( Returns to outpost after resigning/failure. )
EnterChallenge (  ) Description( Enter a challenge mission/pvp. )
EnterChallengeForeign (  ) Description( Enter a foreign challenge mission/pvp. )
TravelGH (  ) Description( Travel to your guild hall. )
LeaveGH (  ) Description( Leave your guild hall. )
AcceptQuest ( $aQuestID ) Description( Accept a quest from an NPC. )
QuestReward ( $aQuestID ) Description( Accept the reward for a quest. )
AbandonQuest ( $aQuestID ) Description( Abandon a quest. )
CloseAllPanels (  ) Description( Close all in-game windows. )
ToggleHeroWindow (  ) Description( Toggle hero window. )
ToggleInventory (  ) Description( Toggle inventory window. )
ToggleAllBags (  ) Description( Toggle all bags window. )
ToggleWorldMap (  ) Description( Toggle world map. )
ToggleOptions (  ) Description( Toggle options window. )
ToggleQuestWindow (  ) Description( Toggle quest window. )
ToggleSkillWindow (  ) Description( Toggle skills window. )
ToggleMissionMap (  ) Description( Toggle mission map. )
ToggleFriendList (  ) Description( Toggle friends list window. )
ToggleGuildWindow (  ) Description( Toggle guild window. )
TogglePartyWindow (  ) Description( Toggle party window. )
ToggleScoreChart (  ) Description( Toggle score chart. )
ToggleLayoutWindow (  ) Description( Toggle layout window. )
ToggleMinionList (  ) Description( Toggle minions window. )
ToggleHeroPanel ( $aHero ) Description( Toggle a hero panel. )
ToggleHeroPetPanel ( $aHero ) Description( Toggle hero's pet panel. )
TogglePetPanel (  ) Description( Toggle pet panel. )
ToggleHelpWindow (  ) Description( Toggle help window. )
ChangeTarget ( $aAgent ) Description( Target an agent. )
CallTarget ( $aTarget ) Description( Call target. )
ClearTarget (  ) Description( Clear current target. )
TargetNearestEnemy (  ) Description( Target the nearest enemy. )
TargetNextEnemy (  ) Description( Target the next enemy. )
TargetPartyMember ( $aNumber ) Description( Target the next party member. )
TargetPreviousEnemy (  ) Description( Target the previous enemy. )
TargetCalledTarget (  ) Description( Target the called target. )
TargetSelf (  ) Description( Target yourself. )
TargetNearestAlly (  ) Description( Target the nearest ally. )
TargetNearestItem (  ) Description( Target the nearest item. )
TargetNextItem (  ) Description( Target the next item. )
TargetPreviousItem (  ) Description( Target the previous item. )
TargetNextPartyMember (  ) Description( Target the next party member. )
TargetPreviousPartyMember (  ) Description( Target the previous party member. )
EnableRendering (  ) Description( Enable graphics rendering. )
DisableRendering (  ) Description( Disable graphics rendering. )
DisplayAll ( $aDisplay ) Description( Display all names. )
DisplayAllies ( $aDisplay ) Description( Display the names of allies. )
DisplayEnemies ( $aDisplay ) Description( Display the names of enemies. )
WriteChat ( $aMessage, $aSender = '激战工具' ) Description( Write a message in chat (can only be seen by botter). )
SendWhisper ( $aReceiver, $aMessage ) Description( Send a whisper to another player. )
SendChat ( $aMessage, $aChannel = '!' ) Description( Send a message to chat. )
ChangeWeaponSet ( $aSet ) Description( Change weapon sets. )
UseSkill ( $aSkillSlot, $aTarget, $aCallTarget = False ) Description( Use a skill. )
CancelAction (  ) Description( Cancel current action. )
ActionInteract (  ) Description( Same as hitting spacebar. )
ActionFollow (  ) Description( Follow a player. )
DropBundle (  ) Description( Drop environment object. )
ClearPartyCommands (  ) Description( Clear all hero flags. )
SuppressAction ( $aSuppress=true ) Description( Suppress action. )
OpenChest (  ) Description( Open a chest. )
DropBuff ( $aSkillID, $aAgentID, $aHeroNumber = 0 ) Description( Stop maintaining enchantment on target. )
MakeScreenshot (  ) Description( Take a screenshot. )
InvitePlayer ( $aPlayerName ) Description( Invite a player to the party. )
LeaveGroup ( $aKickHeroes = True ) Description( Leave your party. )
SwitchMode ( $aMode ) Description( Switches to/from Hard Mode. )
Resign (  ) Description( Resign. )
DonateFaction ( $aFaction ) Description( Donate Kurzick or Luxon faction. )
Dialog ( $aDialogID ) Description( Open a dialog. )
GetLastDialogId (  ) )
GetLastDialogIdHex (  ) )
SkipCinematic (  ) Description( Skip a cinematic. )
SetSkillbarSkill ( $aSlot, $aSkillID, $aHeroNumber = 0 ) Description( Change a skill on the skillbar. )
LoadSkillBar ( $aSkill1 = 0, $aSkill2 = 0, $aSkill3 = 0, $aSkill4 = 0, $aSkill5 = 0, $aSkill6 = 0, $aSkill7 = 0, $aSkill8 = 0, $aHeroNumber = 0 ) Description( Load all skills onto a skillbar simultaneously. )
LoadSkillTemplate ( $aTemplate, $aHeroNumber = 0 ) Description( Loads skill template code. )
LoadAttributes ( $aAttributesArray, $aHeroNumber = 0 ) Description( Load attributes from a two dimensional array. )
IncreaseAttribute ( $aAttributeID, $aHeroNumber = 0 ) Description( Increase attribute by 1 )
DecreaseAttribute ( $aAttributeID, $aHeroNumber = 0 ) Description( Decrease attribute by 1 )
setattributes ( $fattsid, $fattslevel, $aheronumber = 0 ) )
maxattributes ( $aatt1id, $aatt2id = 255, $aheronumber = 0 ) )
ClearAttributes ( $aHeroNumber = 0 ) Description( Set all attributes to 0 )
ChangeSecondProfession ( $aProfession, $aHeroNumber = 0 ) Description( Change your secondary profession. )
GetProfessionName ( $aProf ) Description( Returns profession's abbreviation. )
InitMapLoad (  ) Description( Sets value of GetMapIsLoaded() to 0. )
EnsureEnglish ( $aEnsure ) Description( Changes game language to english. )
ToggleLanguage (  ) Description( Change game language. )
ChangeMaxZoom ( $aZoom = 750 ) Description( Changes the maximum distance you can zoom out. )
ClearMemory (  ) Description( Emptys Guild Wars client memory )
SetMaxMemory ( $aMemory = 157286400 ) Description( Changes the maximum memory Guild Wars can use. )
Enqueue ( $aPtr, $aSize ) Description( Internal use only. )
FloatToInt ( $nFloat ) Description( Converts float to integer. )
GetHeroTitle (  ) Description( Returns Hero title progress. )
GetGladiatorTitle (  ) Description( Returns Gladiator title progress. )
GetKurzickTitle (  ) Description( Returns Kurzick title progress. )
GetLuxonTitle (  ) Description( Returns Luxon title progress. )
GetDrunkardTitle (  ) Description( Returns drunkard title progress. )
GetSurvivorTitle (  ) Description( Returns survivor title progress. )
GetMaxTitles (  ) Description( Returns max titles )
GetLuckyTitle (  ) Description( Returns lucky title progress. )
GetUnluckyTitle (  ) Description( Returns unlucky title progress. )
GetSunspearTitle (  ) Description( Returns Sunspear title progress. )
GetLightbringerTitle (  ) Description( Returns Lightbringer title progress. )
GetCommanderTitle (  ) Description( Returns Commander title progress. )
GetGamerTitle (  ) Description( Returns Gamer title progress. )
GetLegendaryGuardianTitle (  ) Description( Returns Legendary Guardian title progress. )
GetSweetTitle (  ) Description( Returns sweets title progress. )
GetAsuraTitle (  ) Description( Returns Asura title progress. )
GetDeldrimorTitle (  ) Description( Returns Deldrimor title progress. )
GetVanguardTitle (  ) Description( Returns Vanguard title progress. )
GetNornTitle (  ) Description( Returns Norn title progress. )
GetNorthMasteryTitle (  ) Description( Returns mastery of the north title progress. )
GetPartyTitle (  ) Description( Returns party title progress. )
GetZaishenTitle (  ) Description( Returns Zaishen title progress. )
GetTreasureTitle (  ) Description( Returns treasure hunter title progress. )
GetWisdomTitle (  ) Description( Returns wisdom title progress. )
GetKurzickFaction (  ) Description( Returns current Kurzick faction. )
GetMaxKurzickFaction (  ) Description( Returns max Kurzick faction. )
GetLuxonFaction (  ) Description( Returns current Luxon faction. )
GetMaxLuxonFaction (  ) Description( Returns max Luxon faction. )
GetBalthazarFaction (  ) Description( Returns current Balthazar faction. )
GetMaxBalthazarFaction (  ) Description( Returns max Balthazar faction. )
GetImperialFaction (  ) Description( Returns current Imperial faction. )
GetMaxImperialFaction (  ) Description( Returns max Imperial faction. )
GetRarity ( $aItem ) Description( Returns rarity (name color) of an item. )
GetIsIDed ( $aItem ) Description( Tests if an item is identified. )
GetItemReq ( $aItem ) Description( Returns a weapon or shield's minimum required attribute. )
GetItemAttribute ( $aItem ) Description( Returns a weapon or shield's required attribute. )
GetModByIdentifier ( $aItem, $aIdentifier ) Description( Returns an array of a the requested mod. )
GetModStruct ( $aItem ) Description( Returns modstruct of an item. )
GetAssignedToMe ( $aAgent ) Description( Tests if an item is assigned to you. )
GetCanPickUp ( $aAgent ) Description( Tests if you can pick up an item. )
GetBag ( $aBag ) Description( Returns struct of an inventory bag. )
GetItemBySlot ( $aBag, $aSlot ) Description( Returns item by slot. )
GetItemByItemID ( $aItemID ) Description( Returns item struct. )
GetItemByAgentID ( $aAgentID ) Description( Returns item by agent ID. )
GetItemByModelID ( $aModelID ) Description( Returns item by model ID. )
GetGoldStorage (  ) Description( Returns amount of gold in storage. )
GetGoldCharacter (  ) Description( Returns amount of gold being carried. )
FindSalvageKit (  ) Description( Returns item ID of salvage kit in inventory. )
FindIDKit (  ) Description( Returns item ID of ID kit in inventory. )
GetTraderCostID (  ) Description( Returns the item ID of the quoted item. )
GetTraderCostValue (  ) Description( Returns the cost of the requested item. )
GetMerchantItemsBase (  ) Description( Internal use for BuyItem() )
GetMerchantItemsSize (  ) Description( Internal use for BuyItem() )
GetHeroCount (  ) Description( Returns number of heroes you control. )
GetHeroID ( $aHeroNumber ) Description( Returns agent ID of a hero. )
GetHeroNumberByAgentID ( $aAgentID ) Description( Returns hero number by agent ID. )
GetHeroNumberByHeroID ( $aHeroId ) Description( Returns hero number by hero ID. )
GetHeroProfession ( $aHeroNumber, $aSecondary = False ) Description( Returns hero's profession ID (when it can't be found by other means) )
GetIsHeroSkillSlotDisabled ( $aHeroNumber, $aSkillSlot ) Description( Tests if a hero's skill slot is disabled. )
GetAgentByID ( $aAgentID = -2 ) Description( Returns an agent struct. )
GetAgentPtr ( $aAgentID ) Description( Internal use for GetAgentByID() )
GetAgentExists ( $aAgentID ) Description( Test if an agent exists. )
GetTarget ( $aAgent ) Description( Returns the target of an agent. )
GetAgentByPlayerName ( $aPlayerName ) Description( Returns agent by player name. )
GetAgentByName ( $aName ) Description( Returns agent by name. )
GetNearestAgentToAgent ( $aAgent = -2 ) Description( Returns the nearest agent to an agent. )
GetNearestEnemyToAgent ( $aAgent = -2 ) Description( Returns the nearest enemy to an agent. )
GetNearestAgentToCoords ( $aX, $aY ) Description( Returns the nearest agent to a set of coordinates. )
GetNearestSignpostToAgent ( $aAgent = -2 ) Description( Returns the nearest signpost to an agent. )
GetNearestSignpostToCoords ( $aX, $aY ) Description( Returns the nearest signpost to a set of coordinates. )
GetNearestNPCToAgent ( $aAgent ) Description( Returns the nearest NPC to an agent. )
GetNearestNPCToCoords ( $aX, $aY ) Description( Returns the nearest NPC to a set of coordinates. )
GetNearestItemToAgent ( $aAgent = -2, $aCanPickUp = True ) Description( Returns the nearest item to an agent. )
GetParty ( $aAgentArray = 0 ) Description( Returns array of party members  Param: an array returned by GetAgentArray. This is totally optional, but can greatly improve script speed. )
arrayContains ( $array, $item ) )
arrayContainsNumber ( $array, $item ) )
tContains ( $table, $name, $skillnum ) )
GetAgentArray ( $aType = 0 ) Description( Quickly creates an array of agents of a given type )
GetPartyDanger ( $aAgentArray = 0, $aParty = 0 ) Description Returns the "danger level" of each party member  Param1( an array returned by GetAgentArray(). This is totally optional, but can greatly improve script speed.  Param2: an array returned by GetParty() This is totally optional, but can greatly improve script speed. )
GetAgentDanger ( $aAgent, $aAgentArray = 0 ) Description( Return the number of enemy agents targeting the given agent. )
GetIsLiving ( $aAgent ) Description( Tests if an agent is living. )
GetIsStatic ( $aAgent ) Description( Tests if an agent is a signpost/chest/etc. )
GetIsMovable ( $aAgent ) Description( Tests if an agent is an item. )
GetEnergy ( $aAgent = -2 ) Description( Returns energy of an agent. (Only self/heroes) )
GetHealth ( $aAgent = -2 ) Description( Returns health of an agent. (Must have caused numerical change in health) )
GetIsMoving ( $aAgent ) Description( Tests if an agent is moving. )
GetIsKnocked ( $aAgent ) Description( Tests if an agent is knocked down. )
GetIsAttacking ( $aAgent ) Description( Tests if an agent is attacking. )
GetIsCasting ( $aAgent ) Description( Tests if an agent is casting. )
GetIsBleeding ( $aAgent ) Description( Tests if an agent is bleeding. )
GetHasCondition ( $aAgent ) Description( Tests if an agent has a condition. )
GetIsDead ( $aAgent ) Description( Tests if an agent is dead. )
GetHasDeepWound ( $aAgent ) Description( Tests if an agent has a deep wound. )
GetIsPoisoned ( $aAgent ) Description( Tests if an agent is poisoned. )
GetIsEnchanted ( $aAgent ) Description( Tests if an agent is enchanted. )
GetHasDegenHex ( $aAgent ) Description( Tests if an agent has a degen hex. )
GetHasHex ( $aAgent ) Description( Tests if an agent is hexed. )
GetHasWeaponSpell ( $aAgent ) Description( Tests if an agent has a weapon spell. )
GetIsBoss ( $aAgent ) Description( Tests if an agent is a boss. )
GetPlayerName ( $aAgent ) Description( Returns a player's name. )
GetAgentName ( $aAgent ) Description( Returns the name of an agent. )
GetBuffCount ( $aHeroNumber = 0 ) Description( Returns current number of buffs being maintained. )
GetIsTargetBuffed ( $aSkillID, $aAgentID, $aHeroNumber = 0 ) Description( Tests if you are currently maintaining buff on target. )
GetBuffByIndex ( $aBuffNumber, $aHeroNumber = 0 ) Description( Returns buff struct. )
GetSkillbar ( $aHeroNumber = 0 ) Description( Returns skillbar struct. )
GetSkillbarSkillID ( $aSkillSlot, $aHeroNumber = 0 ) Description( Returns the skill ID of an equipped skill. )
GetSkillbarSkillAdrenaline ( $aSkillSlot, $aHeroNumber = 0 ) Description( Returns the adrenaline charge of an equipped skill. )
GetSkillbarSkillAdrenalineRecharge ( $aSkillSlot, $aHeroNumber = 0 ) )
GetSkillbarSkillRecharge ( $aSkillSlot, $aHeroNumber = 0 ) Description( Returns the recharge time remaining of an equipped skill in milliseconds. )
GetSkillEnergyCost ( $aSkillID ) )
GetSkillByID ( $aSkillID ) Description( Returns skill struct. )
GetMorale ( $aHeroNumber = 0 ) Description( Returns current morale. )
GetEffect ( $aSkillID = 0, $aHeroNumber = 0 ) Description( Returns effect struct or array of effects. )
GetHasEffects ( $aSkillIDs ) )
GetEffectTimeRemaining ( $aEffect ) Description( Returns time remaining before an effect expires, in milliseconds. )
GetSkillTimer (  ) Description( Returns the timestamp used for effects and skills (milliseconds). )
GetAttributeByID ( $aAttributeID, $aWithRunes = False, $aHeroNumber = 0 ) Description( Returns level of an attribute. )
GetExperience (  ) Description( Returns amount of experience. )
GetAreaVanquished (  ) Description( Tests if an area has been vanquished. )
GetFoesKilled (  ) Description( Returns number of foes that have been killed so far. )
GetFoesToKill (  ) Description( Returns number of enemies left to kill for vanquish. )
GetMaxAgents (  ) Description( Returns number of agents currently loaded. )
GetMyID (  ) Description( Returns your agent ID. )
GetCurrentTarget (  ) Description( Returns current target. )
GetCurrentTargetID (  ) Description( Returns current target ID. )
GetPing (  ) Description( Returns current ping. )
GetMapID (  ) Description( Returns current map ID. )
GetMapLoading (  ) Description( Returns current load-state. )
GetMapIsLoaded (  ) Description( Returns if map has been loaded. Reset with InitMapLoad(). )
GetDistrict (  ) Description( Returns current district )
GetRegion (  ) Description( Internal use for travel functions. )
GetLanguage (  ) Description( Internal use for travel functions. )
WaitMapLoading ( $aMapID = 0, $aDeadlock = 30000 ) Description( Wait for map to load. Returns true if successful. )
GetQuestByID ( $aQuestID = 0 ) Description( Returns quest struct. )
GetCharname (  ) Description( Returns your characters name. )
GetLoggedIn (  ) Description( Returns if you're logged in. )
GetDisplayLanguage (  ) Description( Returns language currently being used. )
GetInstanceUpTime (  ) Returns how long the current instance has been active, in milliseconds. )
GetBuildNumber (  ) Returns the game client's build number )
GetProfPrimaryAttribute ( $aProfession ) )
RndSleep ( $aAmount, $aRandom = 0.05 ) Description( Sleep a random amount of time. )
TolSleep ( $aAmount = 150, $aTolerance = 50 ) Description( Sleep a period of time, plus or minus a tolerance )
GetWindowHandle (  ) Description( Returns window handle of Guild Wars. )
ComputeDistance ( $aX1, $aY1, $aX2, $aY2 ) Description( Returns the distance between two coordinate pairs. )
GetDistance ( $aAgent1 = -1, $aAgent2 = -2 ) Description( Returns the distance between two agents. )
GetPseudoDistance ( $aAgent1, $aAgent2 ) Description( Return the square of the distance between two agents. )
GetIsPointInPolygon ( $aAreaCoords, $aPosX = 0, $aPosY = 0 ) Description( Checks if a point is within a polygon defined by an array )
ConvertID ( $aID ) Description( Internal use for handing -1 and -2 agent IDs. )
SendPacket ( $aSize, $aHeader, $aParam1 = 0, $aParam2 = 0, $aParam3 = 0, $aParam4 = 0, $aParam5 = 0, $aParam6 = 0, $aParam7 = 0, $aParam8 = 0, $aParam9 = 0, $aParam10 = 0 ) Description( Internal use only. )
PerformAction ( $aAction, $aFlag ) Description( Internal use only. )
Bin64ToDec ( $aBinary ) Description( Internal use only. )
Base64ToBin64 ( $aCharacter ) Description( Internal use only. )
SetEvent ( $aSkillActivate = '', $aSkillCancel = '', $aSkillComplete = '', $aChatReceive = '', $aLoadFinished = '' ) Description( Controls Event System. )
Event ( $hwnd, $msg, $wparam, $lparam ) Description( Internal use for event system.  modified by gigi, avoid getagentbyid, just pass agent id to callback )
ModifyMemory (  ) Description( Internal use only. )
WriteDetour ( $aFrom, $aTo ) Description( Internal use only. )
CreateData (  ) Description( Internal use only. )
CreateMain (  ) Description( Internal use only. )
CreateTargetLog (  ) Description( Internal use only. )
CreateSkillLog (  ) Description( Internal use only. )
CreateSkillCancelLog (  ) Description( Internal use only. )
CreateSkillCompleteLog (  ) Description( Internal use only. )
CreateChatLog (  ) Description( Internal use only. )
CreateDialogHook (  ) )
CreateTraderHook (  ) Description( Internal use only. )
CreateLoadFinished (  ) Description( Internal use only. )
CreateStringLog (  ) Description( Internal use only. )
CreateStringFilter1 (  ) Description( Internal use only. )
CreateStringFilter2 (  ) Description( Internal use only. )
CreateRenderingMod (  ) Description( Internal use only. )
CreateCommands (  ) Description( Internal use only. )
_ ( $aASM ) Description( Internal use only. )
CompleteASMCode (  ) Description( Internal use only. )
GetLabelInfo ( $aLabel ) Description( Internal use only. )
ASMNumber ( $aNumber, $aSmall = False ) Description( Internal use only. )
CountSlots (  ) )
CountSlotsChest (  ) )
GetScytheMaxDmg ( $aItem ) )
GetScytheMinDmg ( $aItem ) 描述( 获取镰刀最低伤害力; 如武器并非无属性，则回报值为0 )
GetItemInscr ( $aItem ); Returns Inscription and all modvalues of the Inscription ;	return( array(modvalcount, inscr, modval1, [modval2, modval3 ...]) ;	no inscription: return 0 )
GetItemMod1 ( $aItem );0x 010F A823 [0701 9827] 0006 B824 E401 7824 9100 0824 [2201 3025 0500 0821] 0400 9826 E100 0824 [C301 3025 1400 B822] 0007 C862 [090F A8A7] 0000 00C0 ; Returns first Mod and all of its modvalues ;	return( array(modvalcount, mod, modval1, [modval2, modval3 ...]) ;	no mod: return 0 )
GetItemMod2 ( $aItem ); Returns second Mod and all of its modvalues ;	return( array(modvalcount, mod, modval1, [modval2, modval3 ...]) ;	no 2nd mod: return 0 )
GetIsShield ( $aItem ) )
RndTravel ( $aMapID ) )
UpgradeItem ( $aWeaponBag,$aWeaponSlot,$aModBag,$aModSlot, $aModType ) ;Modtype 0 prefix 1 suffix 2 inscription )
SetPlayerStatus ( $iStatus ) Description( Change online status. 0 = Offline, 1 = Online, 2 = Do not disturb, 3 = Away )
GetPlayerStatus (  ) )
retainThis ( $item ) )
